//@version=6
indicator("Elite Trend Tracker PRO", shorttitle="EliteTP", overlay=true)

// ========================================================================
// SEKCJA 1: PODSTAWOWE USTAWIENIA
// ========================================================================
g_trend = "Identyfikacja Trendu"
trend_length = input.int(50, "Długość EMA trendu", minval=10, maxval=200, step=5, group=g_trend)
adx_length = input.int(14, "Długość ADX", minval=5, maxval=30, step=1, group=g_trend)
adx_threshold = input.int(25, "Próg siły trendu (ADX)", minval=15, maxval=40, step=5, group=g_trend)

g_entry = "Parametry Wejścia"
pullback_length = input.int(20, "Długość EMA korekcji", minval=5, maxval=50, step=5, group=g_entry)
rsi_length = input.int(14, "Długość RSI", minval=5, maxval=30, step=1, group=g_entry)
rsi_oversold = input.int(40, "Poziom wykupienia (korekta w trendzie wzrostowym)", minval=20, maxval=50, step=5, group=g_entry)
rsi_overbought = input.int(60, "Poziom wyprzedania (korekta w trendzie spadkowym)", minval=50, maxval=80, step=5, group=g_entry)

g_risk = "Zarządzanie Ryzykiem"
atr_length = input.int(14, "Długość ATR", minval=5, maxval=30, step=1, group=g_risk)
sl_atr_multi = input.float(1.5, "Mnożnik ATR dla Stop Loss", minval=0.5, maxval=3.0, step=0.1, group=g_risk)
tp_atr_multi = input.float(3.0, "Mnożnik ATR dla Take Profit", minval=1.0, maxval=6.0, step=0.5, group=g_risk)
use_trailing = input.bool(false, "Używaj Trailing Stop", group=g_risk)
trail_atr_multi = input.float(2.0, "Mnożnik ATR dla Trailing Stop", minval=1.0, maxval=5.0, step=0.5, group=g_risk)

g_filters = "Dodatkowe Filtry"
vol_filter = input.bool(true, "Filtr Objętości", group=g_filters)
vol_length = input.int(20, "Długość średniej objętości", minval=5, maxval=50, step=5, group=g_filters)
vol_multi = input.float(1.5, "Mnożnik objętości", minval=1.0, maxval=3.0, step=0.1, group=g_filters)
use_ma_filter = input.bool(true, "Filtr zgodności MA", group=g_filters)
ma_filter_length = input.int(200, "Długość MA filtra", minval=50, maxval=500, step=50, group=g_filters)

g_exit = "Parametry Wyjścia"
use_fractal_exit = input.bool(false, "Używaj wyjścia na fraktalach", group=g_exit)
fractal_length = input.int(2, "Długość fraktali", minval=1, maxval=5, step=1, group=g_exit)

g_display = "Opcje Wyświetlania"
show_details = input.bool(false, "Pokaż szczegóły", group=g_display, tooltip="Włącz, aby zobaczyć wszystkie wskaźniki pomocnicze")

// ========================================================================
// SEKCJA 2: KALKULACJE WSKAŹNIKÓW
// ========================================================================

// --- Wskaźniki trendu ---
ema_trend = ta.ema(close, trend_length)

// Alternatywna implementacja ADX - całkowicie bez funkcji ta.dmi() i ta.adx()
// Dzięki temu unikamy problemów ze składnią w różnych wersjach Pine Script
up = ta.change(high)
down = -ta.change(low)
plusDM = na(up) ? na : (up > down and up > 0 ? up : 0)
minusDM = na(down) ? na : (down > up and down > 0 ? down : 0)
trueRange = ta.tr(true)

// Smoothed variables using Wilder's smoothing technique
smoothPlusDM = 0.0
smoothMinusDM = 0.0
smoothTR = 0.0

// Initialize and update smoothed values
smoothPlusDM := na(smoothPlusDM[1]) ? ta.sma(plusDM, adx_length) : (smoothPlusDM[1] - smoothPlusDM[1]/adx_length + plusDM)
smoothMinusDM := na(smoothMinusDM[1]) ? ta.sma(minusDM, adx_length) : (smoothMinusDM[1] - smoothMinusDM[1]/adx_length + minusDM)
smoothTR := na(smoothTR[1]) ? ta.sma(trueRange, adx_length) : (smoothTR[1] - smoothTR[1]/adx_length + trueRange)

// Calculate +DI and -DI
plus_di = 100 * smoothPlusDM / smoothTR
minus_di = 100 * smoothMinusDM / smoothTR

// Calculate DX
dx = math.abs(plus_di - minus_di) / (plus_di + minus_di) * 100

// Calculate ADX with smoothing
adx = ta.sma(dx, adx_length)

// --- Wskaźniki korekcji ---
ema_pullback = ta.ema(close, pullback_length)
rsi = ta.rsi(close, rsi_length)

// --- Filtry trendu ---
is_trend_up = close > ema_trend and adx > adx_threshold
is_trend_down = close < ema_trend and adx > adx_threshold

// --- Filtry korekcji ---
pullback_in_uptrend = is_trend_up and close < ema_pullback and close[1] >= ema_pullback[1] and rsi < rsi_overbought
pullback_in_downtrend = is_trend_down and close > ema_pullback and close[1] <= ema_pullback[1] and rsi > rsi_oversold

// --- Filtr MA długoterminowy ---
ma_long_term = ta.sma(close, ma_filter_length)
ma_filter_long = not use_ma_filter or close > ma_long_term
ma_filter_short = not use_ma_filter or close < ma_long_term

// --- Filtr objętości ---
vol_avg = ta.sma(volume, vol_length)
volume_high = volume > vol_avg * vol_multi
volume_filter = not vol_filter or volume_high

// --- ATR dla SL/TP ---
atr_value = ta.atr(atr_length)

// --- Fraktale dla wyjścia ---
high_fractal = ta.highest(high, fractal_length)
low_fractal = ta.lowest(low, fractal_length)

// ========================================================================
// SEKCJA 3: GENEROWANIE SYGNAŁÓW
// ========================================================================

// --- Sygnały wejścia ---
// Sygnał LONG: Trend wzrostowy + korekcja do EMA korekcji + RSI poniżej poziomu wykupienia + filtry
buy_signal = pullback_in_uptrend and ma_filter_long and volume_filter

// Sygnał SHORT: Trend spadkowy + korekcja do EMA korekcji + RSI powyżej poziomu wyprzedania + filtry
sell_signal = pullback_in_downtrend and ma_filter_short and volume_filter

// --- Kalkulacja SL/TP ---
// Stop Loss i Take Profit oparte na ATR
sl_long = close - (sl_atr_multi * atr_value)
tp_long = close + (tp_atr_multi * atr_value)
sl_short = close + (sl_atr_multi * atr_value)
tp_short = close - (tp_atr_multi * atr_value)

// Trailing Stop
trail_long = close - (trail_atr_multi * atr_value)
trail_short = close + (trail_atr_multi * atr_value)

// --- Sygnały wyjścia oparte na fraktalach ---
exit_long = use_fractal_exit and (low[fractal_length] == low_fractal[fractal_length])
exit_short = use_fractal_exit and (high[fractal_length] == high_fractal[fractal_length])

// ========================================================================
// SEKCJA 4: WIZUALIZACJA
// ========================================================================

// --- Rysowanie podstawowych wskaźników ---
// Zawsze pokazuj główne linie trendu
plot(ema_trend, "EMA Trend", color = is_trend_up ? color.green : is_trend_down ? color.red : color.gray, linewidth = 2)
plot(ema_pullback, "EMA Korekcja", color = color.rgb(255, 165, 0), linewidth = 1)

// Pokaż dodatkowe elementy tylko jeśli show_details = true
plot(show_details and use_ma_filter ? ma_long_term : na, "Filtr MA", color = color.rgb(150, 150, 150, 50), linewidth = 1)

// --- Wizualizacja RSI w osobnym oknie (tylko jeśli show_details = true) ---
hline(show_details ? rsi_oversold : na, "Poziom wykupienia", color = color.rgb(233, 30, 99, 50), linestyle = hline.style_dashed)
hline(show_details ? rsi_overbought : na, "Poziom wyprzedania", color = color.rgb(33, 150, 243, 50), linestyle = hline.style_dashed)
plot(show_details ? rsi : na, "RSI", color = rsi > rsi_overbought ? color.red : rsi < rsi_oversold ? color.green : color.gray, display = display.pane)

// --- Wizualizacja ADX w osobnym oknie (tylko jeśli show_details = true) ---
hline(show_details ? adx_threshold : na, "Próg ADX", color = color.rgb(150, 150, 150, 50), linestyle = hline.style_dashed)
plot(show_details ? adx : na, "ADX", color = adx > adx_threshold ? color.yellow : color.gray, linewidth = 2, display = display.pane)

// --- Sygnały na wykresie ---
plotshape(buy_signal, "Sygnał kupna", location=location.belowbar, color=color.green, style=shape.triangleup, size=size.small)
plotshape(sell_signal, "Sygnał sprzedaży", location=location.abovebar, color=color.red, style=shape.triangledown, size=size.small)

// --- Wizualizacja SL/TP dla informacji (tylko dla ostatnich sygnałów) ---
plot(buy_signal ? sl_long : na, "SL Long", color=color.rgb(233, 30, 99, 70), style=plot.style_circles)
plot(buy_signal ? tp_long : na, "TP Long", color=color.rgb(38, 166, 154, 70), style=plot.style_circles)
plot(sell_signal ? sl_short : na, "SL Short", color=color.rgb(38, 166, 154, 70), style=plot.style_circles)
plot(sell_signal ? tp_short : na, "TP Short", color=color.rgb(233, 30, 99, 70), style=plot.style_circles)

// ========================================================================
// SEKCJA 5: GENEROWANIE SYGNAŁU DO BACKTESTINGU
// ========================================================================

// Wartość sygnału dla silnika backtestingu: 1 = long, -1 = short, 0 = brak sygnału
signal_value = buy_signal ? 1 : sell_signal ? -1 : 0

// Eksport sygnału - zaktualizowana nazwa dla jasnej identyfikacji
plot(signal_value, "EliteStrategy", display=display.none, editable=false)

// ========================================================================
// SEKCJA 6: ALERTY
// ========================================================================

// Alert na sygnał kupna
alertcondition(buy_signal, title="Sygnał kupna", message="Elite Trend Tracker: Wykryto sygnał LONG!")

// Alert na sygnał sprzedaży
alertcondition(sell_signal, title="Sygnał sprzedaży", message="Elite Trend Tracker: Wykryto sygnał SHORT!")

// Alert na wyjście z pozycji long
alertcondition(exit_long, title="Wyjście z LONG", message="Elite Trend Tracker: Sygnał wyjścia z LONG!")

// Alert na wyjście z pozycji short
alertcondition(exit_short, title="Wyjście z SHORT", message="Elite Trend Tracker: Sygnał wyjścia z SHORT!")
